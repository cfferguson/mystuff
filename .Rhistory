select(Action, Animation, Comedy,
Drama, Documentary, Romance,
Short) %>%
pivot_longer(everything(),
names_to = "genre") %>%
group_by(genre) %>%
dplyr::tally(value)
ggplot(movies_by_genre,
aes(x = genre,
y = n,
fill = -n)) +
geom_bar(stat='identity',
show.legend = FALSE) +
labs(title = "Count of Genre",
x = "Genre",
y = "Count") +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
pop <-
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
set.seed(999) # Random number generator
movies_sample <-
ggplot2movies::movies %>%
sample_n(70)
ggplot(movies_sample,
aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
(movies_sample_mean <-
movies_sample %>%
summarize(mean = mean(rating)))
resample(movies_sample) %>%
arrange(orig.id) %>%
summarize(mean = mean(rating))
do(10) *
(resample(movies_sample) %>%
summarize(mean = mean(rating)))
library(tidyverse)
library(fontawesome)
library(knitr)
library(kableExtra)
library(patchwork)
library(flipbookr)
xaringanthemer::style_duo(
primary_color = "#212121",
secondary_color = "#fcbb86",
text_bold_color = "#fc868c",
code_inline_color = "#86c7fc",
header_font_google = xaringanthemer::google_font("Jost", "600"),
text_font_google   = xaringanthemer::google_font("Jost", "400")
)
xaringanExtra::use_xaringan_extra(c("tile_view", "animate_css", "tachyons"))
library(tidyverse)
library(mosaic)
library(ggplot2movies)
suppressMessages(library(tidyverse))
suppressMessages(library(mosaic))
suppressMessages(library(ggplot2movies))
forward <- as.character(fontawesome::fa("forward", fill = "
#4682b4"))
stop <- as.character(fontawesome::fa("stop", fill = "#ff6347"))
link <- as.character(fontawesome::fa("link", fill = "#5cb85c"))
bookmark <- as.character(fontawesome::fa("bookmark", fill = "#5cb85c"))
icon_desc <- tibble(
Icon = c(forward,
stop,
link,
bookmark),
Description = c("Indicates that an example continues on the following slide.",
"Indicates that a section using common syntax has ended.",
"Indicates that there is an active hyperlink on the slide.",
"Indicates that a section covering a concept has ended.")
)
kable(icon_desc,
escape = FALSE,
align = 'cl') %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "40em") %>%
row_spec(0, background = "#181818") %>%
row_spec(1, background = "#181818") %>%
row_spec(2, background = "#181818") %>%
row_spec(3, background = "#181818") %>%
row_spec(4, background = "#181818")
library(tidyverse)
library(patchwork)
ggplot2movies::movies %>%
select(Action, Animation, Comedy,
Drama, Documentary, Romance,
Short) %>%
pivot_longer(
everything(),
names_to = "genre"
)
select_movies <-
ggplot2movies::movies %>%
select(Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%
pivot_longer(
everything(),
names_to = "genre"
)
knitr::include_graphics("img/pl2.png")
juniors_multiple <-
tribble(
~ "baker", ~"cinnamon_1", ~"cardamom_2", ~"nutmeg_3",
"Emma", 1L,   0L, 1L,
"Harry", 1L,   1L, 1L,
"Ruby", 1L,   0L, 1L,
"Zainab", 0L, NA, 0L
)
juniors_multiple
juniors_multiple %>%
knitr::kable() %>%
kableExtra::row_spec(0, background = "#212121") %>%
kableExtra::row_spec(2, background = "#212121") %>%
kableExtra::row_spec(4, background = "#212121")
knitr::include_graphics("img/pl3.png")
juniors_multiple %>%
knitr::kable() %>%
kableExtra::row_spec(0, background = "#212121") %>%
kableExtra::row_spec(2, background = "#212121") %>%
kableExtra::row_spec(4, background = "#212121")
knitr::include_graphics("img/pl4.png")
juniors_multiple %>%
knitr::kable() %>%
kableExtra::row_spec(0, background = "#212121") %>%
kableExtra::row_spec(2, background = "#212121") %>%
kableExtra::row_spec(4, background = "#212121")
knitr::include_graphics("img/pl5.png")
knitr::include_graphics("img/pl6.png")
knitr::include_graphics("img/pl7.png")
knitr::include_graphics("img/pl8.png")
knitr::include_graphics("img/pl9.png")
knitr::include_graphics("img/pl10.png")
knitr::include_graphics("img/pl11.png")
knitr::include_graphics("img/pl12.png")
knitr::include_graphics("img/pl13.png")
knitr::include_graphics("img/pl14.png")
knitr::include_graphics("img/pl15.png")
knitr::include_graphics("img/pl16.png")
knitr::include_graphics("img/pl17.png")
juniors_multiple %>%
pivot_longer(-baker,
names_to = c('spice', 'order'),
names_sep = '_',
values_to = 'correct')
glimpse(juniors_multiple)
juniors_multiple_full <-
tribble(
~ "baker", ~"score_1", ~"score_2", ~"score_3",
~ "guess_1", ~"guess_2", ~"guess_3",
"Emma", 1L, 0L, 1L, "cinnamon", "cloves", "nutmeg",
"Harry", 1L,  1L, 1L, "cinnamon", "cardamom", "nutmeg",
"Ruby", 1L, 0L, 1L, "cinnamon", "cumin", "nutmeg",
"Zainab", 0L, NA, 0L, "cardamom", NA_character_, "cinnamon"
)
juniors_multiple_full
glimpse(juniors_multiple_full)
juniors_multiple_full %>%
# Don't do anything with the baker column
pivot_longer(-baker,
# Treat all columns the same and order them
names_to = c(".value", "order"),
# Control how the column names are broken up
names_sep = "_")
ggplot2movies::movies %>%
select(Action, Animation, Comedy,
Drama, Documentary, Romance,
Short) %>%
pivot_longer(everything(),
names_to = "genre") %>%
group_by(genre) %>%
dplyr::tally(value)
movies_by_genre <-
ggplot2movies::movies %>%
select(Action, Animation, Comedy,
Drama, Documentary, Romance,
Short) %>%
pivot_longer(everything(),
names_to = "genre") %>%
group_by(genre) %>%
dplyr::tally(value)
ggplot(movies_by_genre,
aes(x = genre,
y = n,
fill = -n)) +
geom_bar(stat='identity',
show.legend = FALSE) +
labs(title = "Count of Genre",
x = "Genre",
y = "Count") +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
pop <-
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
set.seed(999) # Random number generator
movies_sample <-
ggplot2movies::movies %>%
sample_n(70)
ggplot(movies_sample,
aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
(movies_sample_mean <-
movies_sample %>%
summarize(mean = mean(rating)))
resample(movies_sample) %>%
arrange(orig.id) %>%
summarize(mean = mean(rating))
do(10) *
(resample(movies_sample) %>%
summarize(mean = mean(rating)))
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = -..count..)) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = cut(x, 100))) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = cut(x, 20))) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
ggplot(aes(x = rating,
fill = cut(x, 20)))
movies
ggplot2movies::movies
ggplot2movies::movies %>%
ggplot(aes(x = rating,
fill = aes(fill = ..count..))) +
geom_histogram(color = "white",
bins = 20,
show.legend = FALSE) +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(fill = ..count..),
bins = 20,
show.legend = FALSE) +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(fill = ..count..),
bins = 20,
show.legend = FALSE) +
theme_minimal()
ggplot2movies::movies %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(fill = -..count..),
bins = 20,
show.legend = FALSE) +
theme_minimal()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
?style_duo
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-9R.html")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-7p1.html")
xaringan_to_pdf("Slides-Week-7p2.html")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-6.html")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-5.html")
xaringan:::inf_mr()
blogdown:::preview_site()
xaringan:::inf_mr()
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
comment = "",
cache = F,
widgetframe_self_contained = TRUE)
knitr::opts_knit$set(root.dir = getwd())
library(tidyverse)
library(knitr)
library(kableExtra)
library(here)
library(flipbookr)
library(patchwork)
boxoffice
boxoffice %>%
group_by(year) %>%
tally(name = "number of movies") %>%
ungroup() %>%
filter(`number of movies` ==
max(`number of movies`))
boxoffice
boxoffice %>%
group_by(year)
boxoffice %>%
group_by(year) %>%
tally(name = "number of movies")
boxoffice %>%
group_by(year) %>%
tally(name = "number of movies") %>%
ungroup()
boxoffice %>%
group_by(year) %>%
tally(name = "number of movies") %>%
ungroup() %>%
filter(`number of movies` ==
max(`number of movies`))
boxoffice %>%
group_by(year) %>%
tally(name = "number of movies") %>%
ungroup() %>%
filter(`number of movies` ==
max("number of movies"))
boxoffice %>%
group_by(year) %>%
tally(name = "number of movies") %>%
ungroup()
boxoffice %>%
group_by(year)
boxoffice %>%
group_by(year) %>%
tally(name = "number of movies")
boxoffice %>%
group_by(year)
?How were movies released over the years
?tally
boxoffice %>%
group_by(year) %>%
tally(name = `number of movies`)
boxoffice %>%
group_by(year) %>%
tally(name = hello)
boxoffice %>%
group_by(year) %>%
tally(name = "hello")
boxoffice %>%
group_by(year) %>%
tally()
boxoffice %>%
group_by(year) %>%
tally() %>%
rename(`number of movies` = n)
boxoffice %>%
group_by(year) %>%
tally() %>%
rename(`number of movies` = n) %>%
ungroup() %>%
filter(`number of movies` ==
max(`number of movies`))
boxoffice %>%
group_by(year) %>%
tally() %>%
rename(`number of movies` = n) %>%
ungroup() %>%
filter(`number of movies` ==
max(`number of movies`))
xaringan:::inf_mr()
boxoffice %>%
group_by(year) %>%
summarise(`number of movies` = n()) %>%
ungroup() %>%
filter(`number of movies` ==
max(`number of movies`))
xaringan_to_pdf("Slides-Week-5R.html")
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-4.html")
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-4.html")
xaringan_to_pdf("Slides-Week-4R.html")
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-3.html")
xaringan:::inf_mr()
xaringan_to_pdf("Slides-Week-3R.html")
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-2.html")
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-1.html")
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
xaringan_to_pdf("Slides-Week-2.html")
xaringan_to_pdf("Slides-Week-2R.html")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
shinytableau::yaml_skeleton()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
remotes::install_github("rstudio/shinytableau")
remotes::install_github("rstudio/shinytableau", force=TRUE)
shiny::runApp('~/Documents/Projects/WVSTEMHub/colltree1/test/colltree1_test')
loadchain
# Load libraries ----
library(tidyverse)
loadchain <-
read_csv("stem_data.csv",
show_col_types = FALSE)  # select only those columns that start with Q
# Create codebook ----
stemdf_codebook <-
loadchain %>% # read in csv
select(starts_with("Q")) %>%
head(1) %>% # filter only the first two rows
gather(key = index,
value = item) %>% # from wide to long form
drop_na(item); stemdf_codebook # drop rows with NA in selection
# Load data set as a tibble ----
stemdf <-
loadchain %>%
slice(-2) %>% # keep all but the first two rows
filter(if_all(everything(), ~ !is.na(.x))); stemdf  # remove rows that contain NAs across all columns
loadchain <-
read_csv("stem_data.csv",
show_col_types = FALSE)  # select only those columns that start with Q
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_site()
blogdown::serve_site()
install.packages(c("jqr", "ragg", "rsample"))
(840-2830)^2/2830
(810-2830)^2/2830
(730-2830)^2/2830
(450-2830)^2/2830
blogdown::build_site()
blogdown::check_site
blogdown::check_site()
blogdown::build_site(build_rmd = 'newfile')
blogdown::build_site(build_rmd = 'newfile')
blogdown::serve_site()
blogdown::build_site(build_rmd = 'newfile')
blogdown::check_site()
blogdown::build_site(build_rmd = 'timestamp')
