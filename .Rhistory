reverselog_trans <-
function(base = exp(1)) {
trans <- function(x) -log(x, base)
inv <- function(x) base^(-x)
trans_new(paste0("reverselog-", format(base)), trans, inv,
log_breaks(base = base),
domain = c(1e-100, Inf))
}
n <- 10000
cust <- data.frame(cust_id=1:n,
cust_rev <- rexp(n,.00001))
powers <- function(base,exp) sapply(1:exp, function(exp) base^exp )
ggplot(cust,
aes(cust_rev)) +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_x_continuous(breaks=powers(10,8)) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
ggplot(cust,
aes(cust_rev)) +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_x_continuous() +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
ggplot(cust,
aes(cust_rev)) +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_x_continuous(breaks=powers(10,8))
ggplot(cust,
aes(cust_rev)) +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_x_continuous(breaks=powers(10,10))
ggplot(cust,
aes(cust_rev)) +
geom_histogram(binwidth=1,
aes(fill=..count..),
show.legend = FALSE) +
scale_x_continuous(breaks=powers(10,10))
n <- 10000
cust <- data.frame(cust_id=1:n,
cust_rev <- rexp(n,.00001))
length9v
length9(cust)
length(cust)
powers
n = 1000
mean = 0
sd = 1
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x, mean = mean, sd = sd, binwidth = binwidth, n = n)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dnorm(x, mean = mean, sd = sd) * n * binwidth,
color = "darkred", size = 1)
ggplot(df, aes(x = x, mean = mean, sd = sd, binwidth = binwidth, n = n)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
n = 1000
mean = 0
sd = 1
binwidth = 0.3
set.seed(1)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x, mean = mean, sd = sd, binwidth = binwidth, n = n)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
ggplot(df, aes(x = x, mean = mean, sd = sd, binwidth = binwidth, n = n)) +
theme_bw() +
geom_histogram(binwidth = 1/3,
colour = "white", fill = "cornflowerblue", size = 0.1)
w
ggplot(df, aes(x = x, mean = mean, sd = sd, binwidth = binwidth, n = n)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
binwidth = 0.3
set.seed(1)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x, mean = mean, sd = sd, binwidth = binwidth, n = n)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.3,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
n = 1000
mean = 0
sd = 1
set.seed(1)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.3,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
n = 1000
mean = 0
sd = 1
set.seed(1)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
set.seed(1234)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
set.seed(2021)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
sd = 1
set.seed(2021)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
set.seed(1500)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
set.seed(10390)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth = 0.3,
colour = "white",
fill = "cornflowerblue", size = 0.1)
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
set.seed(1233)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
set.seed(900)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
set.seed(1100)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=1/3,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
n = 1000
set.seed(1100)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=0.5,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
set.seed(1400)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=0.5,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
set.seed(760)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=0.5,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
set.seed(954)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=0.5,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
set.seed(834)
df <- data.frame(x = rnorm(n, mean, sd))
ggplot(df, aes(x = x,
mean = 0,
sd = 1,
binwidth = 0.5,
n = n)) +
theme_bw() +
geom_histogram(binwidth=0.5,
aes(fill=..count..),
show.legend = FALSE) +
scale_fill_distiller(palette = "Spectral") +
theme(
panel.background = element_rect(fill = "#212121"),
plot.background = element_rect(fill = "#212121", color = "#212121"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme_void(base_family = "roboto") +
theme(legend.title = element_text(color = "#FFFFFF"),
legend.text = element_text(color = "#FFFFFF"))
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_site()
blogdown::serve_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
read_csv("dc.csv",
show_col_types = FALSE) %>%
as_tibble() %>%
mutate(Required = case_when(
Required == "checked" ~ as.character(fontawesome::fa("check-circle", fill = "#428bca", height = "15px")),
Required == "unchecked" ~ as.character(fontawesome::fa("times-circle", fill = "#d9534f", height = "15px"))
))
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/content/datacamp")
read_csv("dc.csv",
show_col_types = FALSE) %>%
as_tibble() %>%
mutate(Required = case_when(
Required == "checked" ~ as.character(fontawesome::fa("check-circle", fill = "#428bca", height = "15px")),
Required == "unchecked" ~ as.character(fontawesome::fa("times-circle", fill = "#d9534f", height = "15px"))
))
blogdown::build_site()
blogdown::serve_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
pagedown::chrome_print("Slides-Week-2.Rmd")
pagedown::chrome_print("Slides-Week-2R.Rmd")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
purl("Slides-Week-2.Rmd")
purl("Slides-Week-2R.Rmd")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
purl("Slides-Week-2.Rmd")
purl("Slides-Week-2R.Rmd")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
purl("Slides-Week-2.Rmd")
purl("Slides-Week-2R.Rmd")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
pagedown::chrome_print("Slides-Week-2.Rmd")
pagedown::chrome_print("Slides-Week-2R.Rmd")
xaringan:::inf_mr()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_site()
blogdown::serve_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_site()
blogdown::serve_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
# purl("Slides-Week-1.Rmd")
# purl("Slides-Week-1R.Rmd")
pagedown::chrome_print("Slides-Week-1.html")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
# purl("Slides-Week-1.Rmd")
# purl("Slides-Week-1R.Rmd")
pagedown::chrome_print("Slides-Week-1.html")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# purl("Slides-Week-1.Rmd")
# purl("Slides-Week-1R.Rmd")
pagedown::chrome_print("Slides-Week-1.html")
xaringan:::inf_mr()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# purl("Slides-Week-1.Rmd")
# purl("Slides-Week-1R.Rmd")
pagedown::chrome_print("Slides-Week-1.html")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# library(knitr)
# purl("Slides-Week-1.Rmd")
# purl("Slides-Week-1R.Rmd")
pagedown::chrome_print("Slides-Week-1.html")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 1")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# purl("Slides-Week-1.Rmd")
# purl("Slides-Week-1R.Rmd")
pagedown::chrome_print("Slides-Week-1.html")
