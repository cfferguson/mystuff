geom = "area", fill = "#84CA72", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey")
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
geom_label
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#84CA72", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey")
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey")
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_minimal()
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_void()
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_minimal()
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.2) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.8) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
stat_function(fun = shading_uc, args = list(upper_bound = test_point),
geom = "area", fill = "grey80", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey80") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey20") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey40") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour="grey60") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, colour=" #999999") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color=" #999999") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color = "#99999") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color = "#00998a") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color = "#a7adba") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color = "#65737e") +
theme_minimal() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color = "#65737e") +
theme_minimal(base_size = 22) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
x  axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#00998a", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color = "#65737e") +
theme_minimal(base_size = 22) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(data.frame(x = c(lb, ub)), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = m, sd = stdev)) +
stat_function(fun = shading_uc, args = list(lower_bound = test_point),
geom = "area", fill = "#3d8ba9", alpha = 0.6) +
scale_x_continuous(breaks = seq(ll, ul, stdev),
limits = c(ll - stdev, ul + stdev)) +
geom_vline(xintercept = m, color = "#65737e") +
theme_minimal(base_size = 22) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
blogdown::build_dir()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_dir()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve
_site()
blogdown::serve_site()
httr::GET('cran.r-project.org/faqs.html')
httr::GET(url="cran.r-project.org/faqs.html")
httr::GET(url="https://cran.r-project.org/faqs.html")
httr::GET(url="https://edp619.theoreticalphysed.com")
install.packages(c("lava", "matrixStats"))
httr::GET(url="https://wvu.qualtrics.com")
# Detach all session packages -----
# lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load libraries ---
library(qualtRics)
library(tidyverse)
library(textclean)
## Functions ##
# Gather all label attributes ----
labelAttr <- function(dta) {
labels <- sapply(dta, function(x) attr(x, "label"))
tibble(item = names(labels),
question = labels)
}
## Put your Qualtrics API here ----
qualtrics_api_credentials(api_key = "YOUR API KEY HERE",
base_url = "wvu.ca1.qualtrics.com",
install = TRUE)
## Put your Qualtrics API here ----
qualtrics_api_credentials(api_key = "YOUR API KEY HERE",
base_url = "wvu.ca1.qualtrics.com",
install = TRUE,
overwrite=TRUE)
## Use this command your first time OR if you update the key ----
readRenviron("~/.Renviron")
## Get all of your surveys ----
surveys <- all_surveys()
## Put your Qualtrics API here ----
qualtrics_api_credentials(api_key = "gvw1f1OxuVsZy650cd2lUr2hj7KXDNToHuuyvI6t",
base_url = "wvu.ca1.qualtrics.com",
install = TRUE,
overwrite=TRUE)
## Use this command your first time OR if you update the key ----
readRenviron("~/.Renviron")
## Get all of your surveys ----
surveys <- all_surveys()
surveys
blogdown::build_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_site()
blogdown::serve_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/content/assignment")
blogdown::build_site()
install.packages("qdap")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
>-  Most likely will provide a more robust information set per unit cost than SRS
>-  Census can be administered on all selected clusters
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 6/Slides-Week-6.Rmd")
xaringan:::inf_mr()
library(psych)
install.packages(c("broom", "Deriv", "geojsonsf", "quantreg"))
blogdown::build_site()
blogdown::serve_site()
xaringan:::inf_mr()
pagedown::chrome_print(" ~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 6/Slides-Week-6R.Rmd")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
pagedown::chrome_print(" ~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 6/Slides-Week-6R.Rmd")
pagedown::chrome_print("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/static/slides/Week 6/Slides-Week-6R.Rmd")
setwd("~/Desktop/untitled folder 8")
links<- read_excel("Aware sankey.xlsx")
blogdown::build_site()
blogdown::serve_site()
install.packages(c("rcrossref", "statnet.common"))
blogdown::build_site()
blogdown::serve_site()
library(tidyverse) # ggplot2, dplyr, tidyr, readr,
# purrr, tibble, stringr, forcats
library(viridis)
heads <- rbinom(100000, 50, 0.5)
heads <- data.frame(heads)
heads <- heads %>% mutate(events = ifelse(heads > 35, "> 35", "< 35"))
heads %>%  ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.5) +
scale_fill_manual(values = c("black", "red")) +
theme_void() +
theme(text = element_text(size = 18),
legend.position = c(0.85, 0.85))
heads %>%  ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.8) +
scale_fill_manual(values = c("black", "red")) +
theme_void() +
theme(text = element_text(size = 18),
legend.position = c(0.85, 0.85))
heads %>%  ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.6) +
scale_fill_manual(values = c("black", "red")) +
theme_void() +
theme(text = element_text(size = 18),
legend.position = c(0.85, 0.85))
heads %>%  ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.5) +
scale_fill_manual(values = c("black", "red")) +
theme_void() +
theme(text = element_text(size = 18),
legend.position = c(0.85, 0.85))
rbinom(100000, 50, 0.5) %>%
as_tibble()
heads <- rbinom(100000, 50, 0.5) %>%
as_tibble() %>%
rename(heads = value) %>%
mutate(events = ifelse(heads > 25, "> 25", "< 25"))
heads
heads %>%
ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.5) +
scale_fill_manual(values = c("black", "red")) +
theme_void() +
theme(text = element_text(size = 18),
legend.position = c(0.85, 0.85))
? geom_histogram
heads %>%
ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.5,
show.legend = FALSE) +
scale_fill_manual(values = c("black", "red")) +
theme_void() +
theme(text = element_text(size = 18),
legend.position = c(0.85, 0.85))
heads %>%
ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.5,
show.legend = FALSE) +
scale_fill_manual(values = c("#836575", "#658373")) +
theme_void() +
theme(text = element_text(size = 18),
legend.position = c(0.85, 0.85))
ggsave(binom,
"binom.png")
binom <- heads %>%
ggplot(aes(x=heads, fill = events)) +
geom_histogram(binwidth = 0.5,
show.legend = FALSE) +
scale_fill_manual(values = c("#836575", "#658373")) +
theme_void()
binom
ggsave(binom,
"binom.png")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/content/example/work")
ggsave(binom,
"binom.png")
ggsave("binom.pdf",
binom
)
install.packages("htmlwidgets")
blogdown::build_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
blogdown::build_site()
blogdown::serve_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613/content/example")
install.packages("nflfastR")
install.packages("fields")
install.packages("nflfastR")
install.packages("devtools")
devtools::install_github("lbenz730/ncaahoopR")
install.packages(c("brms", "clipr", "rgdal", "rlang", "sunburstR", "ztable"))
blogdown::build_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
blogdown::build_site()
xaringan:::inf_mr()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
devtools::install_github("dfsnow/clt")
